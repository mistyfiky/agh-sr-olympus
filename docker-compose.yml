version: "3"
services:
  hades:
    build:
      context: "hades"
    ports:
      - "8081:80"
    environment:
      - "JWT_KEY"
      - "DB_DSN=${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(hades-db)/${HADES_DB_NAME}"
      - "APP_PORT=80"
    depends_on:
      - "hades-db"
    restart: "on-failure"
  hades-db:
    image: "mysql"
    environment:
      - "MYSQL_ROOT_PASSWORD"
      - "MYSQL_DATABASE=${HADES_DB_NAME}"
      - "MYSQL_USER"
      - "MYSQL_PASSWORD"
  aphrodite:
    build:
      context: "aphrodite"
      dockerfile: ".docker/Dockerfile"
    ports:
      - "8083:80"
  apollo:
    build:
      context: "apollo"
    environment:
      - "SENTRY_DSN"
      - "NEO4J_URI=bolt://delphi"
    ports:
      - "8084:80"
  delphi:
    image: "neo4j"
    environment:
      - "NEO4J_AUTH=none"
    volumes:
      - "delphi-data:/data"
      - "./seed/delphi/import:/import"
  delphi-seed:
    image: "neo4j"
    command: "sh -c 'cat seed.cypher | cypher-shell -a bolt://delphi:7687 --format verbose'"
    volumes:
      - "./seed/delphi/seed.cypher:/var/lib/neo4j/seed.cypher"
    depends_on:
      - "delphi"
    restart: "on-failure"
  netdata:
    build:
      context: "netdata"
    depends_on:
      - "apollo"
    ports:
      - "19999:19999"
volumes:
  delphi-data:
